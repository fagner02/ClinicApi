// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clinics_api.Contexts;

namespace clinics_api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211228222349_Clinic")]
    partial class Clinic
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ExamScheduling", b =>
                {
                    b.Property<Guid>("ExamsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SchedulingsId")
                        .HasColumnType("char(36)");

                    b.HasKey("ExamsId", "SchedulingsId");

                    b.HasIndex("SchedulingsId");

                    b.ToTable("ExamScheduling");
                });

            modelBuilder.Entity("clinics_api.Models.Address", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("District")
                        .HasColumnType("longtext");

                    b.Property<string>("Num")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("clinics_api.Models.Client", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid?>("AddressId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Cpf");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("clinics_api.Models.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("clinics_api.Models.Scheduling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ClientCpf")
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExamIds")
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("FinalDate")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("InitialDate")
                        .HasColumnType("time(6)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ClientCpf");

                    b.ToTable("Schedulings");
                });

            modelBuilder.Entity("ExamScheduling", b =>
                {
                    b.HasOne("clinics_api.Models.Exam", null)
                        .WithMany()
                        .HasForeignKey("ExamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clinics_api.Models.Scheduling", null)
                        .WithMany()
                        .HasForeignKey("SchedulingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("clinics_api.Models.Client", b =>
                {
                    b.HasOne("clinics_api.Models.Address", "AddressObject")
                        .WithMany("Clients")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AddressObject");
                });

            modelBuilder.Entity("clinics_api.Models.Scheduling", b =>
                {
                    b.HasOne("clinics_api.Models.Client", "Client")
                        .WithMany("Schedulings")
                        .HasForeignKey("ClientCpf");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("clinics_api.Models.Address", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("clinics_api.Models.Client", b =>
                {
                    b.Navigation("Schedulings");
                });
#pragma warning restore 612, 618
        }
    }
}
